services:
  dash:
    container_name: dash
    image: mauricenino/dashdot
    restart: unless-stopped
    privileged: true
    networks:
      - traefik
    environment:
      - DASHDOT_ENABLE_CPU_TEMPS=true
      - DASHDOT_WIDGET_LIST=os,cpu,storage,ram,network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dash.tls=true"
      - "traefik.http.routers.dash.tls.certresolver=cloudflare"
      - "traefik.http.routers.dash.rule=Host(`dash.gibreel.dev`)"
      - "traefik.http.services.dash.loadbalancer.server.port=3001"
    volumes:
      - /:/mnt/host:ro

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Dubai
      - VERSION=docker
      - PLEX_CLAIM=$PLEX_CLAIM
    volumes:
      - /docker/appdata/plex:/config
      - /data/media:/data/media
    network_mode: host
    #networks:
    #  - traefik
    #ports:
    #  - 32400:32400
    #labels:
    #  - "traefik.enable=true"
    #  - "traefik.http.routers.plex.tls=true"
    #  - "traefik.http.routers.plex.tls.certresolver=cloudflare"
    #  - "traefik.http.routers.plex.rule=Host(`plex.gibreel.dev`)"
    #  - "traefik.http.services.plex.loadbalancer.server.port=32400"
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Dubai
      - WEBUI_PORT=8081
      - TORRENTING_PORT=6881
    volumes:
      - /docker/appdata/qbittorrent:/config
      - /data/torrents:/data/torrents
      - /media/.x:/media/.x
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.tls=true"
      - "traefik.http.routers.qbittorrent.tls.certresolver=cloudflare"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.gibreel.dev`)"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8081"
    restart: unless-stopped

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Dubai
    volumes:
      - /docker/appdata/overseerr:/config
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.tls=true"
      - "traefik.http.routers.overseerr.tls.certresolver=cloudflare"
      - "traefik.http.routers.overseerr.rule=Host(`overseerr.gibreel.dev`)"
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Dubai
    volumes:
      - /docker/appdata/prowlarr:/config
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.routers.prowlarr.tls.certresolver=cloudflare"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.gibreel.dev`)"
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Dubai
    volumes:
      - /docker/appdata/radarr:/config
      - /data:/data
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=cloudflare"
      - "traefik.http.routers.radarr.rule=Host(`radarr.gibreel.dev`)"
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Dubai
    volumes:
      - /docker/appdata/sonarr:/config
      - /data:/data
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=cloudflare"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.gibreel.dev`)"
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker/appdata/portainer:/data
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=cloudflare"
      - "traefik.http.routers.portainer.rule=Host(`portainer.gibreel.dev`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    restart: always

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    volumes:
      - /docker/appdata/vaultwarden:/data
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.tls=true"
      - "traefik.http.routers.vaultwarden.tls.certresolver=cloudflare"
      - "traefik.http.routers.vaultwarden.rule=Host(`vaultwarden.gibreel.dev`)"
    restart: unless-stopped

  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Dubai
      - NZBGET_USER=$NZBGET_USER
      - NZBGET_PASS=$NZBGET_PASS
    volumes:
      - /docker/appdata/nzbget/config:/config
      - /data/usenet:/data/usenet:rw
      - /media/.x:/media/.x
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbget.tls=true"
      - "traefik.http.routers.nzbget.tls.certresolver=cloudflare"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.gibreel.dev`)"
    restart: unless-stopped

  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - /docker/appdata/homarr/configs:/app/data/configs
      - /docker/appdata/homarr/icons:/app/public/icons
      - /docker/appdata/homarr/data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homarr.tls=true"
      - "traefik.http.routers.homarr.tls.certresolver=cloudflare"
      - "traefik.http.routers.homarr.rule=Host(`homarr.gibreel.dev`)"
      - "traefik.http.services.homarr.loadbalancer.server.port=7575"

networks:
  traefik:
    name: traefik_default
    external: true
